require_relative '../../descriptions'
require_relative '../../session_identification'
require_relative '../../urls'

module DaVinciDTRTestKit
  class DTRFullEHRQuestionnairePackageRequestTest < Inferno::Test
    include URLs
    include SessionIdentification

    id :dtr_full_ehr_qp_request
    title 'Invoke the DTR Questionnaire Package operation'
    description %(
      Inferno will wait for a DTR questionnaire package request from the client. Upon receipt, Inferno will generate and
      send a response.
    )
    verifies_requirements 'hl7.fhir.us.davinci-dtr_2.0.1@165', 'hl7.fhir.us.davinci-dtr_2.0.1@262'

    input :client_id,
          title: 'Client Id',
          type: 'text',
          optional: true,
          locked: true,
          description: INPUT_CLIENT_ID_LOCKED
    input :session_url_path,
          title: 'Session-specific URL path extension',
          type: 'text',
          optional: true,
          locked: true,
          description: INPUT_SESSION_URL_PATH_LOCKED
    input :smart_jwk_set,
          title: 'JSON Web Key Set (JWKS)',
          type: 'textarea',
          optional: true,
          locked: true,
          description: INPUT_JWK_SET_LOCKED

    run do
      wait_identifier = inputs_to_wait_identifier(client_id, session_url_path)
      qp_endpoint = inputs_to_session_endpont(:questionnaire_package, client_id, session_url_path)

      wait(
        identifier: wait_identifier,
        message: %(
          ### Questionnaire Package

          Inferno will wait for the Full EHR to invoke the DTR Questionnaire Package operation by sending a POST
          request to

          `#{qp_endpoint}`

          A questionnaire package generated by Inferno will be returned.

          ### Continuing the Tests

          When the DTR application has finished loading the Questionnaire
          [Click here](#{resume_pass_url}?token=#{wait_identifier}) to continue.
        )
      )
    end
  end
end
